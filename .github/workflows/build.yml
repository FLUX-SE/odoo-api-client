name: Build

on:
    push: ~
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday

jobs:
    tests:
        runs-on: ubuntu-latest

        name: "Odoo ${{ matrix.odoo }}, PHP ${{ matrix.php }}"

        strategy:
            fail-fast: false
            matrix:
                odoo: [13, 14]
                php: [7.4, 7.3]
        services:
            odoo:
                image: odoo:${{ matrix.odoo }}
                env:
                    # default values
                    HOST: db
                    PORT: 5432
                    USER: odoo
                    PASSWORD: odoo
                ports:
                    - 8069/tcp
                options: >-
                    --link db:db
                    --entrypoint="/entrypoint.sh odoo --database odoo-master --init \"l10n_fr,account_accountant\""

            db:
                image: postgres
                env:
                    POSTGRES_DB: postgres
                    POSTGRES_PASSWORD: odoo
                    POSTGRES_USER: odoo
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            -
                uses: actions/checkout@v2

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl, xmlrpc
                    tools: symfony
                    coverage: none

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Install PHP dependencies
                run: composer install --no-interaction

            -
                name: Run analysis
                run: composer validate --strict
                # vendor/bin/ecs check .

            -
                name: Run PHPStan
                run: vendor/bin/phpstan analyse -c phpstan.neon -l max src/

            -
                name: Wait until odoo is ready
                run: |
                    while ! docker logs "${{ job.services.odoo.id }}" 2>&1 | grep -q "odoo.modules.loading: Modules loaded";
                    do
                        docker logs "${{ job.services.odoo.id }}"
                        sleep 1
                        echo "Checking if Odoo is fully up..."
                    done
                    echo "Odoo is UP !"

            -
                name: Build Odoo tests model classes
                run: |
                    bin/odoo-model-classes-generator -vvv \
                        "http://localhost:${{ job.services.odoo.ports[8069] }}" \
                        odoo-master \
                        admin \
                        admin \
                        "./tests/TestModel/Object" \
                        "Tests\\FluxSE\\OdooApiClient\\TestModel\\Object"

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always
