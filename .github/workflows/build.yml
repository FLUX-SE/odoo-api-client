name: Build

on:
    push: ~
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday

jobs:
    tests:
        runs-on: ubuntu-latest

        name: "PHP ${{ matrix.php }}, MySQL ${{ matrix.mysql }}"

        strategy:
            fail-fast: false
            matrix:
                php: [7.4, 7.3]
                odoo: [13, 14]

        env:
            ODOO_API_HOST: http://localhost:8069
            ODOO_API_DATABASE: odoo
            ODOO_API_USERNAME: admin
            ODOO_API_PASSWORD: admin

        steps:
            -
                uses: actions/checkout@v2

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl, xmlrpc
                    tools: symfony
                    coverage: none

            -
                name: Install Odoo package
                run: |
                    wget -O - https://nightly.odoo.com/odoo.key | sudo apt-key add -
                    echo "deb http://nightly.odoo.com/${{ matrix.odoo }}.0/nightly/deb/ ./" | sudo tee /etc/apt/sources.list.d/odoo.list > /dev/null
                    sudo apt-get update && sudo apt-get install odoo wkhtmltopdf
                    sudo cat /etc/odoo/*.conf

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache Composer
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Install PHP dependencies
                run: composer install --no-interaction

            -
                name: Run analysis
                run: composer validate --strict
                # vendor/bin/ecs check .

            -
                name: Run PHPStan
                run: vendor/bin/phpstan analyse -c phpstan.neon -l max src/

            -
                name: Build Odoo tests model classes
                run: ./bin/odoo-api-client-generator ${{ env.ODOO_API_HOST }} ${{ env.ODOO_API_DATABASE }} ${{ env.ODOO_API_USERNAME }} ${{ env.ODOO_API_PASSWORD }} ./tests/TestModel/Object "Tests\\FluxSE\\OdooApiClient\\TestModel\\Object"

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always
