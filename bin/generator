#!/usr/bin/env php
<?php

declare(strict_types=1);

require __DIR__ . '/../vendor/autoload.php';

use Flux\OdooApiClient\Builder\OdooApiClientBuilder;
use Flux\OdooApiClient\Command\GeneratorCommand;
use Flux\OdooApiClient\Operations\Object\ExecuteKw\InspectionOperations;
use Flux\OdooApiClient\Operations\Object\ExecuteKw\RecordListOperations;
use Flux\OdooApiClient\PhpGenerator\Builder\SerializableClassBuilder;
use Flux\OdooApiClient\PhpGenerator\OdooModelsStructureConverter;
use Flux\OdooApiClient\PhpGenerator\OdooPhpClassesGenerator;
use Prometee\PhpClassGenerator\Builder\Model\ModelFactoryBuilder;
use Prometee\PhpClassGenerator\Builder\View\ViewFactoryBuilder;
use Prometee\PhpClassGenerator\Helper\PhpReservedWordsHelper;
use Symfony\Component\Console\Application;

$phpGenerator = new OdooPhpClassesGenerator(
    '',
    '',
    [],
    new SerializableClassBuilder(
        new ModelFactoryBuilder(),
        new ViewFactoryBuilder()
    ),
);

// The hostname will be replaced by the one given through the command line
$odooApiClientBuilder = new OdooApiClientBuilder('https://google.com');
/** @var RecordListOperations $recordListOperations */
$recordListOperations = $odooApiClientBuilder->buildExecuteKwOperations(
    RecordListOperations::class,
    '',
    '',
    ''
);
/** @var InspectionOperations $inspectionOperations */
$inspectionOperations = $odooApiClientBuilder->buildExecuteKwOperations(
    InspectionOperations::class,
    '',
    '',
    ''
);
$phpReservedWordsHelper = new PhpReservedWordsHelper();

$odooModelsStructureConverter = new OdooModelsStructureConverter(
    $recordListOperations,
    $inspectionOperations,
    $phpReservedWordsHelper
);

$application = new Application('odoo-api-client-generator', '1.0.0');
$command = new GeneratorCommand(
    $inspectionOperations->getObjectOperations(),
    $odooModelsStructureConverter,
    $phpGenerator,
    'bin/generator'
);

$application->add($command);

$application->setDefaultCommand($command->getName(), true);
$application->run();