<?php

declare(strict_types=1);

namespace Flux\OdooApiClient\Model\Object\Product\Template\Attribute;

use DateTimeInterface;
use Flux\OdooApiClient\Model\Object\Base;
use Flux\OdooApiClient\Model\Object\Product\Attribute;
use Flux\OdooApiClient\Model\Object\Product\Attribute\Value as ValueAlias;
use Flux\OdooApiClient\Model\Object\Product\Product;
use Flux\OdooApiClient\Model\Object\Product\Template;
use Flux\OdooApiClient\Model\Object\Res\Users;

/**
 * Odoo model : product.template.attribute.value
 * Name : product.template.attribute.value
 * Info :
 * Materialized relationship between attribute values
 * and product template generated by the product.template.attribute.line
 */
final class Value extends Base
{
    /**
     * Active
     *
     * @var null|bool
     */
    private $ptav_active;

    /**
     * Value
     *
     * @var null|string
     */
    private $name;

    /**
     * Attribute Value
     *
     * @var ValueAlias
     */
    private $product_attribute_value_id;

    /**
     * Attribute Line
     *
     * @var Line
     */
    private $attribute_line_id;

    /**
     * Value Price Extra
     * Extra price for the variant with this attribute value on sale price. eg. 200 price extra, 1000 + 200 = 1200.
     *
     * @var null|float
     */
    private $price_extra;

    /**
     * Exclude for
     * Make this attribute value not compatible with other values of the product or some attribute values of optional
     * and accessory products.
     *
     * @var null|Exclusion[]
     */
    private $exclude_for;

    /**
     * Product Template
     *
     * @var null|Template
     */
    private $product_tmpl_id;

    /**
     * Attribute
     *
     * @var null|Attribute
     */
    private $attribute_id;

    /**
     * Related Variants
     *
     * @var null|Product[]
     */
    private $ptav_product_variant_ids;

    /**
     * HTML Color Index
     * Here you can set a specific HTML color index (e.g. #ff0000) to display the color if the attribute type is
     * 'Color'.
     *
     * @var null|string
     */
    private $html_color;

    /**
     * Is custom value
     * Allow users to input custom values for this attribute value
     *
     * @var null|bool
     */
    private $is_custom;

    /**
     * Display Type
     * The display type used in the Product Configurator.
     *
     * @var null|array
     */
    private $display_type;

    /**
     * Created by
     *
     * @var null|Users
     */
    private $create_uid;

    /**
     * Created on
     *
     * @var null|DateTimeInterface
     */
    private $create_date;

    /**
     * Last Updated by
     *
     * @var null|Users
     */
    private $write_uid;

    /**
     * Last Updated on
     *
     * @var null|DateTimeInterface
     */
    private $write_date;

    /**
     * @param ValueAlias $product_attribute_value_id Attribute Value
     * @param Line $attribute_line_id Attribute Line
     */
    public function __construct(ValueAlias $product_attribute_value_id, Line $attribute_line_id)
    {
        $this->product_attribute_value_id = $product_attribute_value_id;
        $this->attribute_line_id = $attribute_line_id;
    }

    /**
     * @return null|Attribute
     */
    public function getAttributeId(): ?Attribute
    {
        return $this->attribute_id;
    }

    /**
     * @return null|Users
     */
    public function getWriteUid(): ?Users
    {
        return $this->write_uid;
    }

    /**
     * @return null|DateTimeInterface
     */
    public function getCreateDate(): ?DateTimeInterface
    {
        return $this->create_date;
    }

    /**
     * @return null|Users
     */
    public function getCreateUid(): ?Users
    {
        return $this->create_uid;
    }

    /**
     * @return null|array
     */
    public function getDisplayType(): ?array
    {
        return $this->display_type;
    }

    /**
     * @return null|bool
     */
    public function isIsCustom(): ?bool
    {
        return $this->is_custom;
    }

    /**
     * @return null|string
     */
    public function getHtmlColor(): ?string
    {
        return $this->html_color;
    }

    /**
     * @return null|Product[]
     */
    public function getPtavProductVariantIds(): ?array
    {
        return $this->ptav_product_variant_ids;
    }

    /**
     * @return null|Template
     */
    public function getProductTmplId(): ?Template
    {
        return $this->product_tmpl_id;
    }

    /**
     * @param null|bool $ptav_active
     */
    public function setPtavActive(?bool $ptav_active): void
    {
        $this->ptav_active = $ptav_active;
    }

    /**
     * @param Exclusion $item
     */
    public function removeExcludeFor(Exclusion $item): void
    {
        if (null === $this->exclude_for) {
            $this->exclude_for = [];
        }

        if ($this->hasExcludeFor($item)) {
            $index = array_search($item, $this->exclude_for);
            unset($this->exclude_for[$index]);
        }
    }

    /**
     * @param Exclusion $item
     */
    public function addExcludeFor(Exclusion $item): void
    {
        if ($this->hasExcludeFor($item)) {
            return;
        }

        if (null === $this->exclude_for) {
            $this->exclude_for = [];
        }

        $this->exclude_for[] = $item;
    }

    /**
     * @param Exclusion $item
     * @param bool $strict
     *
     * @return bool
     */
    public function hasExcludeFor(Exclusion $item, bool $strict = true): bool
    {
        if (null === $this->exclude_for) {
            return false;
        }

        return in_array($item, $this->exclude_for, $strict);
    }

    /**
     * @param null|Exclusion[] $exclude_for
     */
    public function setExcludeFor(?array $exclude_for): void
    {
        $this->exclude_for = $exclude_for;
    }

    /**
     * @param null|float $price_extra
     */
    public function setPriceExtra(?float $price_extra): void
    {
        $this->price_extra = $price_extra;
    }

    /**
     * @param Line $attribute_line_id
     */
    public function setAttributeLineId(Line $attribute_line_id): void
    {
        $this->attribute_line_id = $attribute_line_id;
    }

    /**
     * @param ValueAlias $product_attribute_value_id
     */
    public function setProductAttributeValueId(ValueAlias $product_attribute_value_id): void
    {
        $this->product_attribute_value_id = $product_attribute_value_id;
    }

    /**
     * @return null|string
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * @return null|DateTimeInterface
     */
    public function getWriteDate(): ?DateTimeInterface
    {
        return $this->write_date;
    }
}
