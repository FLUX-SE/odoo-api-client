<?php

declare(strict_types=1);

namespace Flux\OdooApiClient\Model\Object\Product\Template\Attribute;

use DateTimeInterface;
use Flux\OdooApiClient\Model\Object\Base;
use Flux\OdooApiClient\Model\Object\Product\Attribute;
use Flux\OdooApiClient\Model\Object\Product\Attribute\Value as ValueAlias;
use Flux\OdooApiClient\Model\Object\Product\Product;
use Flux\OdooApiClient\Model\Object\Product\Template;
use Flux\OdooApiClient\Model\Object\Res\Users;

/**
 * Odoo model : product.template.attribute.value
 * Name : product.template.attribute.value
 *
 * Materialized relationship between attribute values
 * and product template generated by the product.template.attribute.line
 */
final class Value extends Base
{
    /**
     * Active
     *
     * @var bool
     */
    private $ptav_active;

    /**
     * Value
     *
     * @var string
     */
    private $name;

    /**
     * Attribute Value
     *
     * @var null|ValueAlias
     */
    private $product_attribute_value_id;

    /**
     * Attribute Line
     *
     * @var null|Line
     */
    private $attribute_line_id;

    /**
     * Value Price Extra
     *
     * @var float
     */
    private $price_extra;

    /**
     * Exclude for
     *
     * @var Exclusion
     */
    private $exclude_for;

    /**
     * Product Template
     *
     * @var Template
     */
    private $product_tmpl_id;

    /**
     * Attribute
     *
     * @var Attribute
     */
    private $attribute_id;

    /**
     * Related Variants
     *
     * @var Product
     */
    private $ptav_product_variant_ids;

    /**
     * HTML Color Index
     *
     * @var string
     */
    private $html_color;

    /**
     * Is custom value
     *
     * @var bool
     */
    private $is_custom;

    /**
     * Display Type
     *
     * @var array
     */
    private $display_type;

    /**
     * Created by
     *
     * @var Users
     */
    private $create_uid;

    /**
     * Created on
     *
     * @var DateTimeInterface
     */
    private $create_date;

    /**
     * Last Updated by
     *
     * @var Users
     */
    private $write_uid;

    /**
     * Last Updated on
     *
     * @var DateTimeInterface
     */
    private $write_date;

    /**
     * @param bool $ptav_active
     */
    public function setPtavActive(bool $ptav_active): void
    {
        $this->ptav_active = $ptav_active;
    }

    /**
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * @param null|ValueAlias $product_attribute_value_id
     */
    public function setProductAttributeValueId(ValueAlias $product_attribute_value_id): void
    {
        $this->product_attribute_value_id = $product_attribute_value_id;
    }

    /**
     * @param null|Line $attribute_line_id
     */
    public function setAttributeLineId(Line $attribute_line_id): void
    {
        $this->attribute_line_id = $attribute_line_id;
    }

    /**
     * @param float $price_extra
     */
    public function setPriceExtra(float $price_extra): void
    {
        $this->price_extra = $price_extra;
    }

    /**
     * @param Exclusion $exclude_for
     */
    public function setExcludeFor(Exclusion $exclude_for): void
    {
        $this->exclude_for = $exclude_for;
    }

    /**
     * @return Template
     */
    public function getProductTmplId(): Template
    {
        return $this->product_tmpl_id;
    }

    /**
     * @return Attribute
     */
    public function getAttributeId(): Attribute
    {
        return $this->attribute_id;
    }

    /**
     * @return Product
     */
    public function getPtavProductVariantIds(): Product
    {
        return $this->ptav_product_variant_ids;
    }

    /**
     * @return string
     */
    public function getHtmlColor(): string
    {
        return $this->html_color;
    }

    /**
     * @return bool
     */
    public function isIsCustom(): bool
    {
        return $this->is_custom;
    }

    /**
     * @return array
     */
    public function getDisplayType(): array
    {
        return $this->display_type;
    }

    /**
     * @return Users
     */
    public function getCreateUid(): Users
    {
        return $this->create_uid;
    }

    /**
     * @return DateTimeInterface
     */
    public function getCreateDate(): DateTimeInterface
    {
        return $this->create_date;
    }

    /**
     * @return Users
     */
    public function getWriteUid(): Users
    {
        return $this->write_uid;
    }

    /**
     * @return DateTimeInterface
     */
    public function getWriteDate(): DateTimeInterface
    {
        return $this->write_date;
    }
}
